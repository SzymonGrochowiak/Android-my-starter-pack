apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion "25.0.3"

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
    }

    dexOptions {
        preDexLibraries = true
        javaMaxHeapSize "6g"
    }

    defaultConfig {
        applicationId "com.szymongrochowiak.androidstarterpack"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode VERSION_MAJOR * 10**4 + VERSION_MINOR * 10**3 + VERSION_PATCH * 10**2 + VERSION_BUILD
        versionName "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    /* TODO #1 #2 This should be uncommented when keys will be attached to the project, uncomment for build types
    signingConfigs {
         // TODO #1 add debug key to the project
        debug {
            storeFile file("debug.keystore")
        }

        // TODO #2 add release key to the project
        releaseConfig {
            storeFile file("other.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }
    */

    buildTypes {
        debug {
            // TODO #1 uncomment
            //signingConfig signingConfigs.debug
            minifyEnabled false
        }

        release {
            // TODO #2 uncomment
            //signingConfig signingConfigs.releaseConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        full {
        }

        mock {
            applicationIdSuffix ".mock"
            versionNameSuffix "-mock"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Support library
    compile "com.android.support:appcompat-v7:$SUPPORT_LIB_VERSION"
    compile "com.android.support:design:$SUPPORT_LIB_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIB_VERSION"
    compile "com.android.support.constraint:constraint-layout:$CONSTRAINT_LAYOUT_VERSION"

    // Mosby
    compile "com.hannesdorfmann.mosby3:mvp:$MOSBY_MVP_VERSION"

    // Dagger 2
    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    // Gson
    compile "com.google.code.gson:gson:$GSON_VERSION"

    // RxJava
    compile "io.reactivex.rxjava2:rxandroid:$RX_ANDROID_VERSION"
    compile "io.reactivex.rxjava2:rxjava:$RX_JAVA_VERSION"

    // OkHttp
    compile "com.squareup.okhttp3:okhttp:$OK_HTTP_VERSION"
    compile "com.squareup.okhttp3:logging-interceptor:$OK_HTTP_VERSION"

    // Retrofit
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"

    // Butterknife
    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    // Timber
    compile "com.jakewharton.timber:timber:$TIMBER_VERSION"

    // Test libraries
    testCompile "junit:junit:$JUNIT_VERSION"
    testCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
    testCompile "com.github.fabioCollini:DaggerMock:$DAGGER_MOCK_VERSION"

    // Android test libraries
    androidTestCompile("com.android.support.test:runner:$SUPPORT_TEST_LIB_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile("com.android.support.test:rules:$SUPPORT_TEST_LIB_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"

    androidTestCompile("com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
}
